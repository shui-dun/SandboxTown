version: '3'

services:
  sandboxtown-front:
    build:
      # context是Dockerfile文件中的上下文路径，一般是Dockerfile所在的目录
      context: sandbox_town_frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped

  sandboxtown-back:
    build:
      context: sandbox_town_backend
      dockerfile: Dockerfile
    restart: unless-stopped
    mem_limit: 1000m
    volumes:
      - sanboxtown-user-upload:/userUpload
    environment:
      - REDIS_PASSWORD=123456
      - MYSQL_PASSWORD=root
    depends_on:
      # 但这只能确保 MySQL 容器进程启动了，无法保证它已经准备好接受连接
      - sandboxtown-mysql
      - sandboxtown-redis

  sandboxtown-mysql:
    # image: mysql:8.1
    # mariadb相比mysql更节约内存，并且兼容mysql，并且默认使用utf8mb4
    image: mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sandbox_town
    volumes:
      - ./sandbox_town_db/customer.cnf:/etc/mysql/conf.d/customer.cnf
      # 将MySQL的数据文件挂载到命名卷，以便数据持久化
      # 如果卷不存在，会自动创建
      # 如果卷存在，会使用卷中的数据文件
      - sandboxtown-db-volume:/var/lib/mysql
      # 初始化数据库时执行的SQL脚本
      # 注意：如果/var/lib/mysql目录中已经存在数据文件，那么这个SQL脚本不会被执行
      - ./sandbox_town_db/import.sql:/docker-entrypoint-initdb.d/import.sql
    restart: unless-stopped
    # 限制内存，MySQL/MariaDB 的某些配置项会根据内存大小自动调整
    mem_limit: 500m
    
  sandboxtown-redis:
    image: redis:7.2-alpine
    environment:
      REDIS_PASSWORD: 123456
    restart: unless-stopped
    volumes:
      - sandboxtown-redis-data:/data

volumes:
  sandboxtown-db-volume:
    driver: local
  sandboxtown-redis-data:
    driver: local
  sanboxtown-user-upload:
    driver: local
